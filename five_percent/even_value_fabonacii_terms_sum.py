'''
Problem Id : 2
Problem statement :

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

'''


def even_value_term_sum(upper_limit):
    f_one = 1
    f_two = 2
    f_previous_minus_one = f_two
    f_previous_minus_two = f_one
    sum = 0

    if (upper_limit == 1):
        return sum
    else:
        sum += f_two
        for x in range(1, (upper_limit - 1)):
            tmp = (f_previous_minus_two + f_previous_minus_one)
            if (tmp >= upper_limit):
                break

            if (tmp % 2 == 0):
                sum += tmp
            f_previous_minus_two = f_previous_minus_one
            f_previous_minus_one = tmp

    return sum


def main():
    num = int(input('Enter the upper_limit = '))

    if (num < 0):
        print('Enter a valid upper_limit')
    else:
        print('Sum of even valued terms upto ' + str(num) +
              ' is = ' + str(even_value_term_sum(num)))

if __name__ == '__main__':
    main()
